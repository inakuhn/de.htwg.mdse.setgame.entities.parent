/*
 * generated by Xtext 2.12.0
 */
package de.htwg.mdse.setgame.entities.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import de.htwg.mdse.setgame.entities.entities.Attributes

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class EntitiesGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
  for(e: resource.allContents.toIterable.filter(Attributes)) {

    fsa.generateFile(
      "CardAttribute.java",
      e.compile)
  }
	}
def compile(Attributes e) '''

package de.htwg.se.setgame.model.impl.atributte;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
public final class CardAttribute {
    private CardAttribute(){
    }
    public static int FIELDSIZE = 0;
    «FOR c: e.cardAttributes»
    private static final String[] «c.name» = [«FOR f:c.features  SEPARATOR ', '»"«f»"«ENDFOR»]
«ENDFOR»
    static {
        attributeNameAndFeature = new HashMap<String, List<String>>();
        «FOR c: e.cardAttributes»
        addNewAttribute(«c.name», "«c.name»");
        addToFieldSize(«c.name»);
        «ENDFOR»
    }
    private static void addNewAttribute(String[] array,String name){
        attributeNameAndFeature.put(name, new LinkedList<String>());
        addArray(array, name);
    }
    private static void addArray(String[] array, String name){
        for(String v : array){
            attributeNameAndFeature.get(name).add(v);
        }
    }
    private static void addToFieldSize(String[] array){
        FIELDSIZE = FIELDSIZE * array.length;
    }
}
'''
}
